@use '/src/template' as temp;
@use '/src/layout-breakpoint' as points;
:host {
    .vc-verifiable-credential {
      align-items: center;
      display: flex;
      flex-direction: column;
      min-width: temp.$min-body-width;

        .body {
          align-items: center;
          display: flex;
          flex-direction: row;
          justify-content: center;
          width: 100%;
            .qr-code {
              -webkit-box-pack: center;
              display: flex;
              justify-content: center;
              padding: temp.$spaceBasic;
              max-height: -moz-fit-content;
              height: fit-content;
              max-height: temp.$body-height;
              overflow-y: auto;
              width: 100%;
            }
            .qr-info {
              display: flex;
              flex-direction: column;
              justify-content: baseline;
              p {
                color: temp.$textDarkSecondary;
              }
              span {
                cursor: pointer;
                color: temp.$textDarkPrimary;
              }
            }
        }
    }
    @media (max-width: map-get(points.$breakpoints, xs)) and  (min-width: map-get(points.$breakpoints, sm)){
      .vc-verifiable-credential {
        width: temp.$body-width-xs;
        min-width: temp.$body-width-xs;
        .body {
          flex-direction: column;
        }
      }
    }
    @media (max-width: map-get(points.$breakpoints, sm)) {
      .vc-verifiable-credential {
        width: temp.$body-width-sm;
        min-width: temp.$body-width-sm;
        .body {
          flex-direction: column;
        }
      }
    }
    @media (max-width: map-get(points.$breakpoints, md)) and (min-width: map-get(points.$breakpoints, sm)){
      .vc-verifiable-credential {
        width: temp.$body-width-md;
      }
    }
}
